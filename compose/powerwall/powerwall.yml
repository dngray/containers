version: "3.5"

services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    hostname: influxdb
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./influxdb.conf
        target: /etc/influxdb/influxdb.conf
        read_only: true
      - type: bind
        source: /mnt/container_data/influxdb
        target: /var/lib/influxdb
    # ports:
    #    - "${INFLUXDB_PORTS:-8086:8086}"

  pypowerwall:
    image: jasonacox/pypowerwall:0.6.2t28
    container_name: pypowerwall
    hostname: pypowerwall
    restart: unless-stopped
    user: "${PWD_USER:-1000:1000}"
    #ports:
    #  - "${PYPOWERWALL_PORTS:-8675:8675}"
    env_file:
      - pypowerwall.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pypowerwall.tls=true"
      - "traefik.http.routers.pypowerwall.rule=Host(`grafana.$MY_DOMAIN`)"
      - "traefik.http.routers.pypowerwall.entrypoints=pypw_secure"
      - "traefik.http.services.pypowerwall.loadbalancer.server.port=8675"

  telegraf:
    image: telegraf:1.28.2
    container_name: telegraf
    hostname: telegraf
    restart: unless-stopped
    user: "${PWD_USER:-1000:1000}"
    command: [
      "telegraf",
      "--config",
      "/etc/telegraf/telegraf.conf",
      "--config-directory",
      "/etc/telegraf/telegraf.d" ]
    volumes:
      - type: bind
        source: ./telegraf.conf
        target: /etc/telegraf/telegraf.conf
        read_only: true
    depends_on:
      - influxdb
      - pypowerwall

  grafana:
    image: grafana/grafana:9.1.2-ubuntu
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    user: "${PWD_USER:-1003:1003}"
    volumes:
      - type: bind
        source: /mnt/container_data/grafana
        target: /var/lib/grafana
    # ports:
    #  - "${GRAFANA_PORTS:-9000:9000}"
    env_file:
      - grafana.env
    depends_on:
      - influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=stepca"
      - "traefik.http.routers.grafana.rule=Host(`grafana.$MY_DOMAIN`)"
      - "traefik.http.routers.grafana-websocket.rule=Host(`grafana.$MY_DOMAIN`) && Path(`/api/live/ws`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=9000"

  weather411:
    image: jasonacox/weather411:0.2.2
    container_name: weather411
    hostname: weather411
    #network_mode: container:vpn_general
    restart: unless-stopped
    user: "${PWD_USER:-1000:1000}"
    volumes:
      - type: bind
        source: ./weather
        target: /var/lib/weather
        read_only: true
    ports:
      - "${WEATHER411_PORTS:-8676:8676}"
    environment:
      - WEATHERCONF=/var/lib/weather/weather411.conf
    depends_on:
      - influxdb

networks:
  default:
    external: true
    name: ${DEFAULT_NETWORK}
