version: '3'
services:
  # Server backend
  terraforming-mars:
    image: andrewsav/terraforming-mars:latest
    container_name: TerraformingMars
    restart: on-failure:3
    #user: 1026:100
    depends_on:
      - mars-postgres
    ports:
      - 8540:8080
    environment:
      POSTGRES_HOST: postgresql://$POSTGRESQL_USER:$POSTGRESQL_PASS@terraformingmars-db/terraforming-mars?sslmode=disable
      NODE_ENV: production
      # PORT: 8080
    logging:
      options:
        max-size: 10m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.terraforming-mars.tls=true"
      - "traefik.http.routers.terraforming-mars.tls.certresolver=stepca"
      - "traefik.http.routers.terraforming-mars.rule=Host(`terraforming-mars.$MY_DOMAIN`)"
      - "traefik.http.routers.terraforming-mars.entrypoints=websecure"

  # Production database
  mars-postgres:
    image: postgres:14.5
    container_name: TerraformingMars-DB
    hostname: terraformingmars-db
    restart: on-failure:3
    #user: 1026:100
    #ports:
    #  - 5432:5432
    mem_limit: 512m
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "terraforming-mars", "-U", "terraformingmarsuser"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: $POSTGRESQL_USER
      POSTGRES_PASSWORD: $POSTGRESQL_PASS
      POSTGRES_DB: terraforming-mars
    volumes:
      - /mnt/container_data/terraforming-mars/db:/var/lib/postgresql/data:rw
    logging:
      options:
        max-size: 10m

networks:
  default:
    external: true
    name: ${DEFAULT_NETWORK}
