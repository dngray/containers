services:
  vpn_usenet:
    extends:
      file: ../vpn/compose.yml
      service: openvpn-client
    container_name: vpn_usenet
    volumes:
      - /mnt/container_data/vpn:/data/vpn
    ports:
      - 6767:6767
      - 8989:8989
      - 7878:7878
    environment:
      - KILL_SWITCH=nftables
      - VPN_CONFIG_FILE=${VPN}
    restart: unless-stopped

  sabnzbd:
    extends:
      file: usenet_common.yml
      service: usenet_apps
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    network_mode: service:vpn_usenet
    volumes:
      - /mnt/container_data/sabnzbd:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.tls=true"
      - "traefik.http.routers.sabnzbd.tls.certresolver=stepca"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.$MY_DOMAIN`)"
      - "traefik.http.routers.sabnzbd.entrypoints=websecure"
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=6767"
    restart: unless-stopped

  sonarr:
    extends:
      file: usenet_common.yml
      service: usenet_apps
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: service:vpn_usenet
    volumes:
      - /mnt/container_data/sonarr:/config
      - /mnt/shared/tv:/mnt/shared/tv
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=stepca"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.$MY_DOMAIN`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped

  radarr:
    extends:
      file: usenet_common.yml
      service: usenet_apps
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: service:vpn_usenet
    volumes:
      - /mnt/container_data/radarr:/config
      - /mnt/shared/movies:/mnt/shared/movies
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=stepca"
      - "traefik.http.routers.radarr.rule=Host(`radarr.$MY_DOMAIN`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped

  lidarr:
    extends:
      file: usenet_common.yml
      service: usenet_apps
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    network_mode: service:vpn_usenet
    volumes:
      - /mnt/container_data/lidarr:/config
      - /mnt/shared/music:/mnt/shared/music
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=stepca"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.$MY_DOMAIN`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
    restart: unless-stopped

  prowlarr:
    extends:
      file: usenet_common.yml
      service: usenet_apps
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: service:vpn_usenet
    volumes:
      - /mnt/container_data/prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=stepca"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.$MY_DOMAIN`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    restart: unless-stopped

networks:
  default:
    external: true
    name: ${DEFAULT_NETWORK}
